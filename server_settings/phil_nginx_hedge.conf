#user phillipwstewart;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;
    include    mime.types;
    charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;
    log_format  main  '$remote_addr [$time_local] "$request" $status ($body_bytes_sent b) ($request_time s)';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    upstream django {
        server unix:///Users/phillipwstewart/Desktop/462Project/cpsc-462/wsgi.sock;
    }

    server {
        listen      8000 default_server;
        # the domain name it will serve for
        server_name 127.0.0.1; #.hedge.com; # substitute your machine's IP address or FQDN
        charset     utf-8;

        access_log  /Users/phillipwstewart/Desktop/462Project/cpsc-462/hedge/logs/nginx_req.log  main;
        error_page  404    /404.html;
        error_page   500 502 503 504  /50x.html;
        
        # max upload size
        client_max_body_size 1M;   # adjust to taste

        # Django media
        location /media  {
            alias /Users/phillipwstewart/Desktop/462Project/cpsc-462/hedge/static/;
        }

        location /static {
            alias /Users/phillipwstewart/Desktop/462Project/cpsc-462/hedge/static/;
        }

        # Finally, send all non-media requests to the Django server.
        location / {
            uwsgi_pass  django;
            include     /Users/phillipwstewart/Desktop/462Project/cpsc-462/server_settings/uwsgi_params;
            #include     /etc/nginx/mime.types;
        }

		location = /404.html {
            internal;
			#root  /Users/phillipwstewart/Desktop/462Project/cpsc-462/hedge/static/;
        }

         redirect server error pages to the static page /50x.html
        location = /50x.html {
            internal;
        }
    }

    include servers/*;
}
